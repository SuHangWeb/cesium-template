(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-487886b7"],{9521:function(n,e,t){},e9d3:function(n,e,t){"use strict";var i=t("4bb1"),o=t("e143"),r=(t("7502"),t("2237"),t("eb3b"),t("a567"),t("f8c7"),t("e226"),t("5f01"),t("5f07"),t("b1f6"),t("5e94"),t("62db"),function(){function n(e,t){Object(i["a"])(this,n),this.Cesium=e,this.viewer=t}return Object(o["a"])(n,[{key:"formCssColorString",value:function(n){var e=this.Cesium;return e.Color.fromCssColorString(n)}},{key:"getPosition",value:function(n){var e=this.Cesium,t=this.viewer,i=t.scene.camera.pickEllipsoid(n.position),o=e.Cartographic.fromCartesian(i),r=e.Math.toDegrees(o.longitude),s=e.Math.toDegrees(o.latitude),a=Number(t.camera.positionCartographic.height.toFixed(0));return{longitude:r,latitude:s,cameraHeight:a}}},{key:"terrainProviderHeight",value:function(n){var e=this.Cesium,t=e.createWorldTerrain(),i=e.sampleTerrainMostDetailed(t,n);return Promise.resolve(i)}},{key:"getSeibelCurve",value:function(n,e,t,i){var o=this.Cesium,r=[],s=o.Cartographic.fromCartesian(n),a=o.Cartographic.fromCartesian(e),l=180*s.longitude/Math.PI,c=180*s.latitude/Math.PI,u=180*a.longitude/Math.PI,h=180*a.latitude/Math.PI,p=Math.sqrt((l-u)*(l-u)+(c-h)*(c-h)),f=p*t,d=o.Cartesian3.clone(n),m=o.Cartesian3.clone(e),g=o.Cartesian3.distance(d,o.Cartesian3.ZERO),v=o.Cartesian3.distance(m,o.Cartesian3.ZERO);if(o.Cartesian3.normalize(d,d),o.Cartesian3.normalize(m,m),0===o.Cartesian3.distance(d,m))return r;var y=o.Cartesian3.angleBetween(d,m);r.push(n);for(var C=1;C<i-1;C++){var b=1*C/(i-1),_=1-b,w=Math.sin(_*y)/Math.sin(y),E=Math.sin(b*y)/Math.sin(y),A=o.Cartesian3.multiplyByScalar(d,w,new o.Cartesian3),P=o.Cartesian3.multiplyByScalar(m,E,new o.Cartesian3),k=o.Cartesian3.add(A,P,new o.Cartesian3),M=b*Math.PI,T=g*_+v*b+Math.sin(M)*f,L=o.Cartesian3.multiplyByScalar(k,T,k);r.push(L)}return r.push(e),r}},{key:"getCatesian3FromPX",value:function(n){var e=this.viewer.camera.getPickRay(n);return e?this.viewer.scene.globe.pick(e,this.viewer.scene):null}},{key:"meter2Lat",value:function(n){var e=Math.PI,t=12742*e/360;return n/t/1e3}},{key:"meter2Lng",value:function(n,e){var t=Math.PI,i=6371*Math.cos(e*t/180)*2*t/360;return n/i/1e3}},{key:"isDegreesOrCartesian",value:function(n){if(!n)throw new Error("Error in Parameter!");return"number"===typeof n.x&&"number"===typeof n.y&&"number"===typeof n.z||"number"===typeof n.lng&&"number"===typeof n.lat}},{key:"toDegrees",value:function(n){var e=this.Cesium;if(this.isDegreesOrCartesian(n)){var t=function(n){var t=new e.Cartesian3(n.x,n.y,n.z),i=e.Cartographic.fromCartesian(t);return{lng:parseFloat(e.Math.toDegrees(i.longitude).toFixed(8)),lat:parseFloat(e.Math.toDegrees(i.latitude).toFixed(8)),alt:parseFloat(i.height.toFixed(8))}};return n.x&&(n=t(n)),n}}},{key:"toCartesian",value:function(n){var e=this.Cesium;if(this.isDegreesOrCartesian(n)){var t=function(n){return e.Cartesian3.fromDegrees(n.lng,n.lat,n.alt||0)};return n.lng&&(n=t(n)),n}}},{key:"toWindowCoordinates",value:function(n){var e=this.Cesium,t=this.viewer;if(t&&n&&n.x&&n.y&&n.z)return e.SceneTransforms.wgs84ToWindowCoordinates(t.scene,n);if(t&&n.lng&&n.lat&&n.alt)return e.SceneTransforms.wgs84ToWindowCoordinates(t.scene,toCartesianFromDegrees(n));throw new Error("Error in Parameter!")}},{key:"colorRgb",value:function(n){var e=/^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/,t=n.toLowerCase();if(e.test(t)){if(4===t.length){for(var i="#",o=1;o<4;o+=1)i+=t.slice(o,o+1).concat(t.slice(o,o+1));t=i}for(var r=[],s=1;s<7;s+=2)r.push(parseInt("0x"+t.slice(s,s+2)));return r}return[]}},{key:"colorRgbString",value:function(n){var e=this.colorRgb(n);return"rgb("+e[0]+","+e[1]+","+e[2]+")"}},{key:"colorRgb1",value:function(n){var e=this.colorRgb(n);return e.forEach((function(n,t){e[t]=(n/255).toFixed(2)})),e}},{key:"colorRGB2Hex",value:function(n){var e=n.split(",");if(e.length<=1)return n;var t=parseInt(e[0].split("(")[1]),i=parseInt(e[1]),o=parseInt(e[2].split(")")[0]),r="#"+((1<<24)+(t<<16)+(i<<8)+o).toString(16).slice(1);return r}}]),n}());e["a"]=r},f698:function(n,e,t){"use strict";t("9521")},fbea:function(n,e,t){"use strict";t.r(e);var i=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"container"},[t("div",{attrs:{id:"cesiumContainer"}}),t("el-card",{staticClass:"operation-panel"},[t("div",{staticClass:"operation-header clearfix",attrs:{slot:"header"},slot:"header"},[t("span",[n._v("楼层分解")])]),t("div",{staticClass:"operation-content"},[t("el-form",{ref:"form",attrs:{model:n.form,"label-width":"80px",size:"mini"}},[t("el-form-item",{attrs:{label:"整体控制"}},[t("el-radio-group",{on:{change:n.wholeChange},model:{value:n.form.whole,callback:function(e){n.$set(n.form,"whole",e)},expression:"form.whole"}},n._l(n.wholeArr,(function(e,i){return t("el-radio-button",{key:i,attrs:{label:e.value}},[n._v(n._s(e.label)+" ")])})),1)],1),t("el-form-item",{attrs:{label:"显示指定"}},[t("el-radio-group",{on:{change:n.appointChange},model:{value:n.form.appoint,callback:function(e){n.$set(n.form,"appoint",e)},expression:"form.appoint"}},n._l(n.appointArr,(function(e,i){return t("el-radio",{key:i,staticClass:"appoint-radio",attrs:{border:"",label:e.value}},[n._v(n._s(e.label)+" ")])})),1)],1)],1)],1)])],1)},o=[],r=(t("5f01"),t("7502"),t("df64"),t("a567"),t("9e48")),s=t("e9d3"),a=t("3c88"),l=t.n(a),c=t("896e"),u=[{codeLanguage:"VUE",relyOn:[{label:"uuid（npm）",url:"https://www.npmjs.com/package/uuid",externalLinks:!0},{label:"bignumber.js（npm）",url:"https://www.npmjs.com/package/bignumber.js",externalLinks:!0},{label:"Entity.js",url:"cesium/Transform.js"},{label:"floor.glb",url:"Vue/Models/gLTF/storey/floor.glb"},{label:"top.glb",url:"Vue/Models/gLTF/storey/top.glb"}],code:[{codeLanguage:"html",content:'<template>\n                      <div class="container">\n                        <div id="cesiumContainer"></div>\n                        <el-card class="operation-panel">\n                          <div slot="header" class="operation-header clearfix">\n                            <span>楼层分解</span>\n                          </div>\n                          <div class="operation-content">\n                            <el-form ref="form" :model="form" label-width="80px" size="mini">\n                              <el-form-item label="整体控制">\n                                <el-radio-group v-model="form.whole" @change="wholeChange">\n                                  <el-radio-button :label="item.value" v-for="(item, index) in wholeArr" :key="index">{{ item.label }}\n                                  </el-radio-button>\n                                </el-radio-group>\n                              </el-form-item>\n                              <el-form-item label="显示指定">\n                                <el-radio-group v-model="form.appoint" @change="appointChange">\n                                  <el-radio class="appoint-radio" border :label="item.value" v-for="(item, index) in appointArr"\n                                    :key="index">{{ item.label }}\n                                  </el-radio>\n                                </el-radio-group>\n                              </el-form-item>\n                            </el-form>\n                          </div>\n                        </el-card>\n                      </div>\n                    </template>'},{codeLanguage:"js",content:'import Entity from "@/common/cesium/Entity.js";\n                    import Transform from "@/common/cesium/Transform.js";\n                    import BigNumber from "bignumber.js";\n                    import { v4 as uuidv4 } from "uuid";\n                    export default {\n                      data() {\n                        return {\n                          viewer: null,\n                          handler: null,\n                          _Entity: null,\n                          _Transform: null,\n                          cesiumContainerDom: null,\n                          wholeArr: [\n                            {\n                              value: 1,\n                              label: "展开"\n                            },\n                            {\n                              value: 2,\n                              label: "合并"\n                            },\n                            {\n                              value: 3,\n                              label: "还原"\n                            }\n                          ],\n                          appointArr: [\n                            {\n                              value: 1,\n                              label: "一楼"\n                            },\n                            {\n                              value: 2,\n                              label: "二楼"\n                            },\n                            {\n                              value: 3,\n                              label: "三楼"\n                            },\n                            {\n                              value: 4,\n                              label: "四楼"\n                            },\n                            {\n                              value: 5,\n                              label: "五楼"\n                            },\n                            {\n                              value: 6,\n                              label: "六楼"\n                            },\n                            {\n                              value: 7,\n                              label: "七楼"\n                            },\n                            {\n                              value: 8,\n                              label: "八楼"\n                            },\n                            {\n                              value: 9,\n                              label: "九楼"\n                            },\n                            {\n                              value: 0,\n                              label: "顶楼"\n                            },\n                          ],\n                          form: {\n                            whole: "",\n                            appoint: ""\n                          },\n                          EntityArr: [],\n                          defaultPosition: {\n                            lat: 41.81741540043599,\n                            lng: 123.42949456471793,\n                          },\n                          offsetLng: "",\n                          offsetMeter: ""\n                        };\n                      },\n                      mounted() {\n                        this.init();\n                      },\n                      methods: {\n                        init() {\n                          const Cesium = this.cesium;\n                          Cesium.Ion.defaultAccessToken = process.env.VUE_APP_TOKEN;\n                          this.viewer = new Cesium.Viewer("cesiumContainer", {\n                            imageryProvider: new Cesium.ArcGisMapServerImageryProvider({\n                              url: "https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer",\n                            }),\n                            terrainProvider: new Cesium.CesiumTerrainProvider({\n                              //加载火星在线地形\n                              url: "http://data.marsgis.cn/terrain",\n                            }),\n                            infoBox: false,\n                            selectionIndicator: false,\n                            navigation: false,\n                            animation: false,\n                            timeline: false,\n                            baseLayerPicker: false,\n                            geocoder: false,\n                            homeButton: false,\n                            sceneModePicker: false,\n                            navigationHelpButton: false,\n                            shouldAnimate: false,\n                          });\n                          //是否开启抗锯齿\n                          this.viewer.scene.fxaa = true;\n                          this.viewer.scene.postProcessStages.fxaa.enabled = true;\n                          this._Entity = new Entity(Cesium, this.viewer);\n                          this._Transform = new Transform(Cesium, this.viewer);\n                          this.handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas);\n                          this.cesiumContainerDom = document.getElementById(\'cesiumContainer\')\n                          this.viewer.scene.terrainProvider = new Cesium.EllipsoidTerrainProvider({});//移除地形\n                          this.start();\n                        },\n                        /**\n                         * 开始\n                         */\n                        start() {\n                          const Cesium = this.cesium;\n                          const _this = this\n                          /**\n                           * 初始化模型\n                           */\n                          function floorInit(len, height) {\n                            let EntityModelArr = []\n                            let _height = 0\n                            // 加载楼层 start\n                            for (let i = 0; i < len; i++) {\n                              _height = i * height\n                              const EntityModel = _this._Entity.createModel({\n                                id: uuidv4(),\n                                position: Cesium.Cartesian3.fromDegrees(\n                                  _this.defaultPosition.lng, _this.defaultPosition.lat, _height\n                                ),\n                                uri: process.env.VUE_APP_PUBLIC_URL + "/Vue/Models/gLTF/storey/floor.glb",\n                                heightReference: Cesium.HeightReference.RELATIVE_TO_GROUND,\n                              })\n                              EntityModelArr.push(EntityModel)\n                            }\n                            // 加载楼层 end\n                            // 加载楼顶 start\n                            const EntityModelTop = _this._Entity.createModel({\n                              id: uuidv4(),\n                              position: Cesium.Cartesian3.fromDegrees(\n                                _this.defaultPosition.lng, _this.defaultPosition.lat, len * height\n                              ),\n                              uri: process.env.VUE_APP_PUBLIC_URL + "/Vue/Models/gLTF/storey/top.glb",\n                              heightReference: Cesium.HeightReference.RELATIVE_TO_GROUND,\n                            })\n                            // 加载楼顶 end\n                            return [...EntityModelArr, EntityModelTop]\n                          }\n                    \n                          this.EntityArr = floorInit(9, 3)\n                    \n                          this.viewer.flyTo(this.EntityArr);\n                    \n                    \n                          // 计算移位的位置\n                          this.offsetMeter = Math.abs(Number(this._Transform.meter2Lng(15, this.defaultPosition.lng)))\n                          this.offsetLng = Number(new BigNumber(this.defaultPosition.lng).plus(this.offsetMeter))\n                    \n                          /**\n                           * 鼠标接触模型 产生高亮\n                           */\n                          function modelHover($entity, type) {\n                            if (type) {\n                              $entity.model.color = Cesium.Color.RED.withAlpha(0.5)\n                              $entity.model.colorBlendMode = Cesium.ColorBlendMode.MIX\n                              $entity.model.colorBlendAmount = 0.5\n                              $entity.model.silhouetteColor = "Red"\n                              $entity.model.silhouetteSize = 2.0\n                            } else {\n                              $entity.model.color = undefined\n                              $entity.model.colorBlendMode = undefined\n                              $entity.model.colorBlendAmount = undefined\n                              $entity.model.silhouetteColor = undefined\n                              $entity.model.silhouetteSize = undefined\n                            }\n                          }\n                    \n                          // 鼠标移动 start\n                          this.handler.setInputAction((event) => {\n                            const pick = this.viewer.scene.pick(event.endPosition);\n                            // const dpick = this.viewer.scene.drillPick(movement.position, 1000, 1000)\n                            // console.log("cesium点击", movement, pick, dpick);\n                            if (!Cesium.defined(pick)) {\n                              this.cesiumContainerDom.style.cursor = "default";\n                              for (let i = 0; i < this.EntityArr.length; i++) {\n                                const item = this.EntityArr[i]\n                                modelHover(item, false)\n                              }\n                            } else {\n                              this.cesiumContainerDom.style.cursor = "pointer";\n                              const _Entity = pick.id\n                              for (let i = 0; i < this.EntityArr.length; i++) {\n                                const item = this.EntityArr[i]\n                                modelHover(item, false)\n                                if (item._id == _Entity._id) {\n                                  modelHover(_Entity, true)\n                                }\n                              }\n                            }\n                    \n                            // const ray = this.viewer.camera.getPickRay(event.endPosition);\n                            // const cartesian = this.viewer.scene.globe.pick(\n                            //   ray,\n                            //   this.viewer.scene\n                            // );\n                            // console.log(cartesian)\n                          }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);\n                          // 鼠标移动 end\n                          //鼠标左键点击 Start\n                          this.handler.setInputAction((event) => {\n                            const pick = this.viewer.scene.pick(event.position);\n                            if (pick) {\n                              const $entity = pick.id\n                              // $entity.model.heightReference = Cesium.HeightReference.NONE\n                              // $entity.position = this.getCallbackProperty(position, \'offset\')\n                              for (let i = 0; i < this.EntityArr.length; i++) {\n                                const _Entity_ = this.EntityArr[i]\n                                let position\n                                if (_Entity_.position?._value) {\n                                  position = this.cartesian3TolngLatAlt(_Entity_.position._value)\n                                } else {\n                                  position = this.cartesian3TolngLatAlt(_Entity_.position.getValue())\n                                }\n                    \n                                if (_Entity_._id == $entity._id) {\n                                  if (position[0] == this.defaultPosition.lng) {\n                                    _Entity_.position = this.getCallbackProperty(position, \'offset\')\n                                  } else {\n                                    _Entity_.position = this.getCallbackProperty(position, \'noOffset\')\n                                  }\n                    \n                                } else {\n                                  _Entity_.position = this.getCallbackProperty(position, \'noOffset\')\n                                }\n                              }\n                            }\n                          }, Cesium.ScreenSpaceEventType.LEFT_CLICK);\n                          //鼠标左键点击 End\n                        },\n                        /**\n                         * @description 将笛卡尔坐标系转成经纬度高程\n                         * @param {Object} cartesian 笛卡尔坐标系对象 {x, y, z}\n                         * @returns 返回经纬度高程对象\n                         */\n                        cartesian3TolngLatAlt(cartesian) {\n                          const Cesium = this.cesium;\n                          if (!cartesian || Object.keys(cartesian).length !== 3) {\n                            throw new Error(\'请传入合法的cartesian对象 {x, y, z}\')\n                          }\n                          const cartesian3 = new Cesium.Cartesian3(cartesian.x, cartesian.y, cartesian.z);\n                          const cartographic = Cesium.Cartographic.fromCartesian(cartesian3);\n                          const lat = Cesium.Math.toDegrees(cartographic.latitude);\n                          const lng = Cesium.Math.toDegrees(cartographic.longitude);\n                          const height = Math.round(cartographic.height)\n                          return [lng, lat, height]\n                        },\n                    \n                        /**\n                         * 延迟操作\n                         */\n                        getCallbackProperty(position, type, height) {\n                          const Cesium = this.cesium;\n                          const _this = this\n                          if (type == "open") {\n                            let factor = position[2];\n                            return new Cesium.CallbackProperty((time) => {\n                              if (factor >= height) {\n                                factor = height\n                              } else {\n                                factor++\n                              }\n                              // 动态更新位置\n                              return Cesium.Cartesian3.fromDegrees(\n                                position[0], position[1], factor\n                              )\n                            }, false);\n                          }\n                          if (type == "merge") {\n                            let factor = position[2];\n                            return new Cesium.CallbackProperty((time) => {\n                              if (factor <= height) {\n                                factor = height\n                              } else {\n                                factor--\n                              }\n                              // 动态更新位置\n                              return Cesium.Cartesian3.fromDegrees(\n                                position[0], position[1], factor\n                              )\n                            }, false);\n                          }\n                          if (type == "recovery") {\n                            return Cesium.Cartesian3.fromDegrees(\n                              this.defaultPosition.lng, position[1], height\n                            )\n                          }\n                          if (type == "offset") {\n                            let originalLng = position[0]\n                            return new Cesium.CallbackProperty((time) => {\n                              if (originalLng >= this.offsetLng) {\n                                originalLng = this.offsetLng\n                              } else {\n                                originalLng += this.offsetMeter / 30\n                              }\n                              // 动态更新位置\n                              return Cesium.Cartesian3.fromDegrees(\n                                originalLng, position[1], position[2]\n                              )\n                            }, false);\n                          }\n                          if (type == "noOffset") {\n                            let originalLng = position[0]\n                            return new Cesium.CallbackProperty((time) => {\n                              if (originalLng <= this.defaultPosition.lng) {\n                                originalLng = this.defaultPosition.lng\n                              } else {\n                                originalLng -= this.offsetMeter / 30\n                              }\n                              // 动态更新位置\n                              return Cesium.Cartesian3.fromDegrees(\n                                originalLng, position[1], position[2]\n                              )\n                            }, false);\n                          }\n                        },\n                        /**\n                         * 整体控制\n                         */\n                        wholeChange(e) {\n                          const Cesium = this.cesium;\n                          this.form.appoint = ""\n                          for (let i = 0; i < this.EntityArr.length; i++) {\n                            const item = this.EntityArr[i]\n                            let position\n                            if (item.position?._value) {\n                              position = this.cartesian3TolngLatAlt(item.position._value)\n                            } else {\n                              position = this.cartesian3TolngLatAlt(item.position.getValue())\n                            }\n                    \n                            if (e === 1) {\n                              item.show = true\n                              item.position = this.getCallbackProperty(position, \'open\', 3 * i * 2)\n                            }\n                            if (e === 2) {\n                              item.show = true\n                              item.position = this.getCallbackProperty(position, \'merge\', 3 * i)\n                            }\n                            if (e === 3) {\n                              item.show = true\n                              item.position = this.getCallbackProperty(position, \'recovery\', 3 * i)\n                            }\n                          }\n                        },\n                        /**\n                         * 显示指定\n                         */\n                        appointChange(e) {\n                          this.form.whole = ""\n                          for (let i = 0; i < this.EntityArr.length; i++) {\n                            const item = this.EntityArr[i]\n                            let position\n                            if (item.position?._value) {\n                              position = this.cartesian3TolngLatAlt(item.position._value)\n                            } else {\n                              position = this.cartesian3TolngLatAlt(item.position.getValue())\n                            }\n                            item.position = this.getCallbackProperty(position, \'merge\', 3 * i)\n                            if (e === 0) {\n                              item.show = true\n                            } else {\n                              if (i < e) {\n                                item.show = true\n                              } else {\n                                item.show = false\n                              }\n                            }\n                          }\n                        }\n                      },\n                    };'},{codeLanguage:"css",content:".container {\n                        width: 100%;\n                        height: 100%;\n                      \n                        #cesiumContainer {\n                          width: 100%;\n                          height: 100%;\n                        }\n                      \n                        .operation-panel {\n                          width: 360px;\n                          position: fixed;\n                          top: 60px;\n                          right: 10px;\n                          z-index: 9;\n                      \n                          .appoint-radio {\n                            margin: 0 5px 5px 0;\n                          }\n                        }\n                      }"}]},{codeLanguage:"JS",relyOn:[{label:"uuid.min.js",url:"JavaScript/cesium/Tripartite/uuid-js/uuid.min.js"},{label:"bignumber.js",url:"JavaScript/cesium/Tripartite/bignumber/bignumber.js"},{label:"Entity.js",url:"JavaScript/cesium/Entity.js"},{label:"Utils.js",url:"JavaScript/cesium/Utils.js"},{label:"Transform.js",url:"JavaScript/cesium/Transform.js"},{label:"floor.glb",url:"JavaScript/Models/gLTF/storey/floor.glb"},{label:"top.glb",url:"JavaScript/Models/gLTF/storey/top.glb"}],code:[{codeLanguage:"js",content:'window.models_gLTF_district_Obj = {\n                            _Utils: new Utils(),\n                            handler: null,\n                            _Entity: null,\n                            _Transform: null,\n                            cesiumContainerDom: null,\n                            wholeArr: [{\n                                value: 1,\n                                label: "展开"\n                            },\n                            {\n                                value: 2,\n                                label: "合并"\n                            },\n                            {\n                                value: 3,\n                                label: "还原"\n                            }],\n                            appointArr: [\n                                {\n                                    value: 1,\n                                    label: "一楼"\n                                },\n                                {\n                                    value: 2,\n                                    label: "二楼"\n                                },\n                                {\n                                    value: 3,\n                                    label: "三楼"\n                                },\n                                {\n                                    value: 4,\n                                    label: "四楼"\n                                },\n                                {\n                                    value: 5,\n                                    label: "五楼"\n                                },\n                                {\n                                    value: 6,\n                                    label: "六楼"\n                                },\n                                {\n                                    value: 7,\n                                    label: "七楼"\n                                },\n                                {\n                                    value: 8,\n                                    label: "八楼"\n                                },\n                                {\n                                    value: 9,\n                                    label: "九楼"\n                                },\n                                {\n                                    value: 0,\n                                    label: "顶楼"\n                                },\n                            ],\n                            form: {\n                                whole: "",\n                                appoint: ""\n                            },\n                            EntityArr: [],\n                            defaultPosition: {\n                                lat: 41.81741540043599,\n                                lng: 123.42949456471793,\n                            },\n                            offsetLng: "",\n                            offsetMeter: "",\n                            // 初始化\n                            init() {\n                                if (!this._Utils.operationDom(\'has\', "operation-panel")) {\n                                    this._Utils.operationDom("append", \'MainCenter\', this.create_panel_dom("operation-panel"))\n                                }\n                                this._Entity = new Entity(Cesium, viewer);\n                                this._Transform = new Transform(Cesium, viewer);\n                                this.handler = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas);\n                                this.cesiumContainerDom = document.getElementById(\'MainCenter\')\n                                viewer.scene.terrainProvider = new Cesium.EllipsoidTerrainProvider({});//移除地形\n                    \n                                this.EntityArr = this.floorInit(9, 3)\n                                viewer.flyTo(this.EntityArr);\n                    \n                                // 计算移位的位置\n                                this.offsetMeter = Math.abs(Number(this._Transform.meter2Lng(15, this.defaultPosition.lng)))\n                                this.offsetLng = Number(new BigNumber(this.defaultPosition.lng).plus(this.offsetMeter))\n                    \n                    \n                    \n                                // 鼠标移动 start\n                                this.handler.setInputAction((event) => {\n                                    const pick = viewer.scene.pick(event.endPosition);\n                                    if (!Cesium.defined(pick)) {\n                                        this.cesiumContainerDom.style.cursor = "default";\n                                        for (let i = 0; i < this.EntityArr.length; i++) {\n                                            const item = this.EntityArr[i]\n                                            this.modelHover(item, false)\n                                        }\n                                    } else {\n                                        this.cesiumContainerDom.style.cursor = "pointer";\n                                        const _Entity = pick.id\n                                        for (let i = 0; i < this.EntityArr.length; i++) {\n                                            const item = this.EntityArr[i]\n                                            this.modelHover(item, false)\n                                            if (item._id == _Entity._id) {\n                                                this.modelHover(_Entity, true)\n                                            }\n                                        }\n                                    }\n                                }, Cesium.ScreenSpaceEventType.MOUSE_MOVE);\n                                // 鼠标移动 end\n                                //鼠标左键点击 Start\n                                this.handler.setInputAction((event) => {\n                                    const pick = viewer.scene.pick(event.position);\n                                    if (pick) {\n                                        const $entity = pick.id\n                                        for (let i = 0; i < this.EntityArr.length; i++) {\n                                            const _Entity_ = this.EntityArr[i]\n                                            let position\n                                            if (_Entity_.position?._value) {\n                                                position = this.cartesian3TolngLatAlt(_Entity_.position._value)\n                                            } else {\n                                                position = this.cartesian3TolngLatAlt(_Entity_.position.getValue())\n                                            }\n                    \n                                            if (_Entity_._id == $entity._id) {\n                                                if (position[0] == this.defaultPosition.lng) {\n                                                    _Entity_.position = this.getCallbackProperty(position, \'offset\')\n                                                } else {\n                                                    _Entity_.position = this.getCallbackProperty(position, \'noOffset\')\n                                                }\n                    \n                                            } else {\n                                                _Entity_.position = this.getCallbackProperty(position, \'noOffset\')\n                                            }\n                                        }\n                                    }\n                                }, Cesium.ScreenSpaceEventType.LEFT_CLICK);\n                                //鼠标左键点击 End\n                    \n                    \n                    \n                            },\n                            /**\n                            * 初始化模型\n                            */\n                            floorInit(len, height) {\n                                let EntityModelArr = []\n                                let _height = 0\n                                // 加载楼层 start\n                                for (let i = 0; i < len; i++) {\n                                    _height = i * height\n                                    const EntityModel = this._Entity.createModel({\n                                        id: uuid4(),\n                                        position: Cesium.Cartesian3.fromDegrees(\n                                            this.defaultPosition.lng, this.defaultPosition.lat, _height\n                                        ),\n                                        uri: "http://re8r7gk9l.hb-bkt.clouddn.com/JavaScript/cesium/Models/gLTF/storey/floor.glb",\n                                        heightReference: Cesium.HeightReference.RELATIVE_TO_GROUND,\n                                    })\n                                    EntityModelArr.push(EntityModel)\n                                }\n                                // 加载楼层 end\n                                // 加载楼顶 start\n                                const EntityModelTop = this._Entity.createModel({\n                                    id: uuid4(),\n                                    position: Cesium.Cartesian3.fromDegrees(\n                                        this.defaultPosition.lng, this.defaultPosition.lat, len * height\n                                    ),\n                                    uri: "http://re8r7gk9l.hb-bkt.clouddn.com/JavaScript/cesium/Models/gLTF/storey/top.glb",\n                                    heightReference: Cesium.HeightReference.RELATIVE_TO_GROUND,\n                                })\n                                // 加载楼顶 end\n                                return [...EntityModelArr, EntityModelTop]\n                            },\n                    \n                            /**\n                            * @description 将笛卡尔坐标系转成经纬度高程\n                            * @param {Object} cartesian 笛卡尔坐标系对象 {x, y, z}\n                            * @returns 返回经纬度高程对象\n                            */\n                            cartesian3TolngLatAlt(cartesian) {\n                                if (!cartesian || Object.keys(cartesian).length !== 3) {\n                                    throw new Error(\'请传入合法的cartesian对象 {x, y, z}\')\n                                }\n                                const cartesian3 = new Cesium.Cartesian3(cartesian.x, cartesian.y, cartesian.z);\n                                const cartographic = Cesium.Cartographic.fromCartesian(cartesian3);\n                                const lat = Cesium.Math.toDegrees(cartographic.latitude);\n                                const lng = Cesium.Math.toDegrees(cartographic.longitude);\n                                const height = Math.round(cartographic.height)\n                                return [lng, lat, height]\n                            },\n                            /**\n                            * 延迟操作\n                            */\n                            getCallbackProperty(position, type, height) {\n                                if (type == "open") {\n                                    let factor = position[2];\n                                    return new Cesium.CallbackProperty((time) => {\n                                        if (factor >= height) {\n                                            factor = height\n                                        } else {\n                                            factor++\n                                        }\n                                        // 动态更新位置\n                                        return Cesium.Cartesian3.fromDegrees(\n                                            position[0], position[1], factor\n                                        )\n                                    }, false);\n                                }\n                                if (type == "merge") {\n                                    let factor = position[2];\n                                    return new Cesium.CallbackProperty((time) => {\n                                        if (factor <= height) {\n                                            factor = height\n                                        } else {\n                                            factor--\n                                        }\n                                        // 动态更新位置\n                                        return Cesium.Cartesian3.fromDegrees(\n                                            position[0], position[1], factor\n                                        )\n                                    }, false);\n                                }\n                                if (type == "recovery") {\n                                    return Cesium.Cartesian3.fromDegrees(\n                                        this.defaultPosition.lng, position[1], height\n                                    )\n                                }\n                                if (type == "offset") {\n                                    let originalLng = position[0]\n                                    return new Cesium.CallbackProperty((time) => {\n                                        if (originalLng >= this.offsetLng) {\n                                            originalLng = this.offsetLng\n                                        } else {\n                                            originalLng += this.offsetMeter / 30\n                                        }\n                                        // 动态更新位置\n                                        return Cesium.Cartesian3.fromDegrees(\n                                            originalLng, position[1], position[2]\n                                        )\n                                    }, false);\n                                }\n                                if (type == "noOffset") {\n                                    let originalLng = position[0]\n                                    return new Cesium.CallbackProperty((time) => {\n                                        if (originalLng <= this.defaultPosition.lng) {\n                                            originalLng = this.defaultPosition.lng\n                                        } else {\n                                            originalLng -= this.offsetMeter / 30\n                                        }\n                                        // 动态更新位置\n                                        return Cesium.Cartesian3.fromDegrees(\n                                            originalLng, position[1], position[2]\n                                        )\n                                    }, false);\n                                }\n                            },\n                            /**\n                            * 创建操作面板\n                            * @param {*} id \n                            * @returns \n                            */\n                            create_panel_dom(id) {\n                                let _div = window.document.createElement("div");\n                                _div.id = id\n                                _div.className = id\n                                const _this = this\n                    \n                                function create_whole() {\n                                    let wholeHTML = \'\'\n                                    for (let i = 0; i < _this.wholeArr.length; i++) {\n                                        wholeHTML += \'<div class="whole-item" onclick="models_gLTF_district_Obj.wholeClick(\' + i + \')">\' + _this.wholeArr[i].label + \'</div>\'\n                                    }\n                                    return wholeHTML\n                                }\n                    \n                                function create_appoint() {\n                                    let appointHTML = \'\'\n                                    for (let i = 0; i < _this.appointArr.length; i++) {\n                                        appointHTML += \'<div class="appoint-item" onclick="models_gLTF_district_Obj.appointClick(\' + i + \')">\' + _this.appointArr[i].label + \'</div>\'\n                                    }\n                                    return appointHTML\n                                }\n                    \n                                let _html = \'<div class="operation-header">楼层分解</div>\'\n                                _html += \'<div class="operation-content">\'\n                                _html += \'<div class="form-item">\'\n                                _html += \'<div class="form-label">整体控制</div>\'\n                                _html += \'<div class="form-value">\'\n                                _html += create_whole()\n                                _html += \'</div>\'\n                                _html += \'</div>\'\n                                _html += \'<div class="form-item">\'\n                                _html += \'<div class="form-label">显示指定</div>\'\n                                _html += \'<div class="form-value">\'\n                                _html += create_appoint()\n                                _html += \'</div>\'\n                                _html += \'</div>\'\n                                _html += \'</div>\'\n                                _div.innerHTML = _html\n                                return _div\n                            },\n                            /**\n                            * 鼠标接触模型 产生高亮\n                            */\n                            modelHover($entity, type) {\n                                if (type) {\n                                    $entity.model.color = Cesium.Color.RED.withAlpha(0.5)\n                                    $entity.model.colorBlendMode = Cesium.ColorBlendMode.MIX\n                                    $entity.model.colorBlendAmount = 0.5\n                                    $entity.model.silhouetteColor = "Red"\n                                    $entity.model.silhouetteSize = 2.0\n                                } else {\n                                    $entity.model.color = undefined\n                                    $entity.model.colorBlendMode = undefined\n                                    $entity.model.colorBlendAmount = undefined\n                                    $entity.model.silhouetteColor = undefined\n                                    $entity.model.silhouetteSize = undefined\n                                }\n                            },\n                            /**\n                            * 整体控制触发\n                            */\n                            wholeClick(index) {\n                                const e = this.wholeArr[index].value\n                                this.form.appoint = ""\n                                for (let i = 0; i < this.EntityArr.length; i++) {\n                                  const item = this.EntityArr[i]\n                                  let position\n                                  if (item.position?._value) {\n                                    position = this.cartesian3TolngLatAlt(item.position._value)\n                                  } else {\n                                    position = this.cartesian3TolngLatAlt(item.position.getValue())\n                                  }\n                          \n                                  if (e === 1) {\n                                    item.show = true\n                                    item.position = this.getCallbackProperty(position, \'open\', 3 * i * 2)\n                                  }\n                                  if (e === 2) {\n                                    item.show = true\n                                    item.position = this.getCallbackProperty(position, \'merge\', 3 * i)\n                                  }\n                                  if (e === 3) {\n                                    item.show = true\n                                    item.position = this.getCallbackProperty(position, \'recovery\', 3 * i)\n                                  }\n                                }\n                            },\n                            /**\n                            * 显示指定触发\n                            */\n                            appointClick(index) {\n                                const e = this.appointArr[index].value\n                                this.form.whole = ""\n                                for (let i = 0; i < this.EntityArr.length; i++) {\n                                    const item = this.EntityArr[i]\n                                    let position\n                                    if (item.position?._value) {\n                                        position = this.cartesian3TolngLatAlt(item.position._value)\n                                    } else {\n                                        position = this.cartesian3TolngLatAlt(item.position.getValue())\n                                    }\n                                    item.position = this.getCallbackProperty(position, \'merge\', 3 * i)\n                                    if (e === 0) {\n                                        item.show = true\n                                    } else {\n                                        if (i < e) {\n                                            item.show = true\n                                        } else {\n                                            item.show = false\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        models_gLTF_district_Obj.init()'},{codeLanguage:"css",content:".operation-panel {\n                            width: 360px;\n                            position: fixed;\n                            top: 60px;\n                            right: 10px;\n                            z-index: 9;\n                            -webkit-box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n                            box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n                            border: 1px solid #ebeef5;\n                            background-color: #fff;\n                            color: #303133;\n                            -webkit-transition: .3s;\n                            transition: .3s;\n                            border-radius: 4px;\n                            overflow: hidden;\n                          \n                            .operation-header {\n                              padding: 18px 20px;\n                              border-bottom: 1px solid #ebeef5;\n                              -webkit-box-sizing: border-box;\n                              box-sizing: border-box;\n                              color: #303133;\n                              font-size: 16px;\n                            }\n                          \n                            .operation-content {\n                              padding: 20px;\n                          \n                              .form-item {\n                                display: flex;\n                                margin-bottom: 20px;\n                          \n                                .form-label {\n                                  width: 80px;\n                                  text-align: right;\n                                  vertical-align: middle;\n                                  float: left;\n                                  font-size: 14px;\n                                  color: #606266;\n                                  padding: 6px 12px 6px 0;\n                                  -webkit-box-sizing: border-box;\n                                  box-sizing: border-box;\n                                  font-weight: 700;\n                                }\n                          \n                                .form-value {\n                                  flex: 1;\n                                  overflow: hidden;\n                                  display: flex;\n                                  flex-wrap: wrap;\n                          \n                                  >* {\n                                    padding: 6px 15px;\n                                    margin: 0 5px 5px 0;\n                                    border-radius: 3px;\n                                    font-size: 14px;\n                                    color: #606266;\n                                    cursor: pointer;\n                                    border: 1px solid #dcdfe6;\n                          \n                                    &:hover {\n                                      border-color: #409eff;\n                                      color: #409eff;\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }"}]}],h={data:function(){return{viewer:null,handler:null,_Entity:null,_Transform:null,cesiumContainerDom:null,wholeArr:[{value:1,label:"展开"},{value:2,label:"合并"},{value:3,label:"还原"}],appointArr:[{value:1,label:"一楼"},{value:2,label:"二楼"},{value:3,label:"三楼"},{value:4,label:"四楼"},{value:5,label:"五楼"},{value:6,label:"六楼"},{value:7,label:"七楼"},{value:8,label:"八楼"},{value:9,label:"九楼"},{value:0,label:"顶楼"}],form:{whole:"",appoint:""},EntityArr:[],defaultPosition:{lat:41.81741540043599,lng:123.42949456471793},offsetLng:"",offsetMeter:""}},created:function(){this.$store.dispatch("highlight/set_code",u)},mounted:function(){this.init()},methods:{init:function(){var n=this.cesium;n.Ion.defaultAccessToken="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJlNTIzZTZiYi05OWQxLTQ0OTUtYTUzNC1mYjYxNWI4OTZiZTYiLCJpZCI6OTA3MDUsImlhdCI6MTY1MDUzNDAzMn0.0f1DG8NlExZnbrueMn_AgO6GX_g_RASavpxAWcVymPs",this.viewer=new n.Viewer("cesiumContainer",{imageryProvider:new n.ArcGisMapServerImageryProvider({url:"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer"}),terrainProvider:new n.CesiumTerrainProvider({url:"http://data.marsgis.cn/terrain"}),infoBox:!1,selectionIndicator:!1,navigation:!1,animation:!1,timeline:!1,baseLayerPicker:!1,geocoder:!1,homeButton:!1,sceneModePicker:!1,navigationHelpButton:!1,shouldAnimate:!1}),this.viewer.scene.fxaa=!0,this.viewer.scene.postProcessStages.fxaa.enabled=!0,this._Entity=new r["a"](n,this.viewer),this._Transform=new s["a"](n,this.viewer),this.handler=new n.ScreenSpaceEventHandler(this.viewer.scene.canvas),this.cesiumContainerDom=document.getElementById("cesiumContainer"),this.viewer.scene.terrainProvider=new n.EllipsoidTerrainProvider({}),this.start()},start:function(){var n=this,e=this.cesium,t=this;function i(n,i){for(var o=[],r=0,s=0;s<n;s++){r=s*i;var a=t._Entity.createModel({id:Object(c["a"])(),position:e.Cartesian3.fromDegrees(t.defaultPosition.lng,t.defaultPosition.lat,r),uri:"/cesium-template/Vue/Models/gLTF/storey/floor.glb",heightReference:e.HeightReference.RELATIVE_TO_GROUND});o.push(a)}var l=t._Entity.createModel({id:Object(c["a"])(),position:e.Cartesian3.fromDegrees(t.defaultPosition.lng,t.defaultPosition.lat,n*i),uri:"/cesium-template/Vue/Models/gLTF/storey/top.glb",heightReference:e.HeightReference.RELATIVE_TO_GROUND});return[].concat(o,[l])}function o(n,t){t?(n.model.color=e.Color.RED.withAlpha(.5),n.model.colorBlendMode=e.ColorBlendMode.MIX,n.model.colorBlendAmount=.5,n.model.silhouetteColor="Red",n.model.silhouetteSize=2):(n.model.color=void 0,n.model.colorBlendMode=void 0,n.model.colorBlendAmount=void 0,n.model.silhouetteColor=void 0,n.model.silhouetteSize=void 0)}this.EntityArr=i(9,3),this.viewer.flyTo(this.EntityArr),this.offsetMeter=Math.abs(Number(this._Transform.meter2Lng(15,this.defaultPosition.lng))),this.offsetLng=Number(new l.a(this.defaultPosition.lng).plus(this.offsetMeter)),this.handler.setInputAction((function(t){var i=n.viewer.scene.pick(t.endPosition);if(e.defined(i)){n.cesiumContainerDom.style.cursor="pointer";for(var r=i.id,s=0;s<n.EntityArr.length;s++){var a=n.EntityArr[s];o(a,!1),a._id==r._id&&o(r,!0)}}else{n.cesiumContainerDom.style.cursor="default";for(var l=0;l<n.EntityArr.length;l++){var c=n.EntityArr[l];o(c,!1)}}}),e.ScreenSpaceEventType.MOUSE_MOVE),this.handler.setInputAction((function(e){var t=n.viewer.scene.pick(e.position);if(t)for(var i=t.id,o=0;o<n.EntityArr.length;o++){var r,s=n.EntityArr[o],a=void 0;a=null!==(r=s.position)&&void 0!==r&&r._value?n.cartesian3TolngLatAlt(s.position._value):n.cartesian3TolngLatAlt(s.position.getValue()),s._id==i._id&&a[0]==n.defaultPosition.lng?s.position=n.getCallbackProperty(a,"offset"):s.position=n.getCallbackProperty(a,"noOffset")}}),e.ScreenSpaceEventType.LEFT_CLICK)},cartesian3TolngLatAlt:function(n){var e=this.cesium;if(!n||3!==Object.keys(n).length)throw new Error("请传入合法的cartesian对象 {x, y, z}");var t=new e.Cartesian3(n.x,n.y,n.z),i=e.Cartographic.fromCartesian(t),o=e.Math.toDegrees(i.latitude),r=e.Math.toDegrees(i.longitude),s=Math.round(i.height);return[r,o,s]},getCallbackProperty:function(n,e,t){var i=this,o=this.cesium;if("open"==e){var r=n[2];return new o.CallbackProperty((function(e){return r>=t?r=t:r++,o.Cartesian3.fromDegrees(n[0],n[1],r)}),!1)}if("merge"==e){var s=n[2];return new o.CallbackProperty((function(e){return s<=t?s=t:s--,o.Cartesian3.fromDegrees(n[0],n[1],s)}),!1)}if("recovery"==e)return o.Cartesian3.fromDegrees(this.defaultPosition.lng,n[1],t);if("offset"==e){var a=n[0];return new o.CallbackProperty((function(e){return a>=i.offsetLng?a=i.offsetLng:a+=i.offsetMeter/30,o.Cartesian3.fromDegrees(a,n[1],n[2])}),!1)}if("noOffset"==e){var l=n[0];return new o.CallbackProperty((function(e){return l<=i.defaultPosition.lng?l=i.defaultPosition.lng:l-=i.offsetMeter/30,o.Cartesian3.fromDegrees(l,n[1],n[2])}),!1)}},wholeChange:function(n){this.cesium;this.form.appoint="";for(var e=0;e<this.EntityArr.length;e++){var t,i=this.EntityArr[e],o=void 0;o=null!==(t=i.position)&&void 0!==t&&t._value?this.cartesian3TolngLatAlt(i.position._value):this.cartesian3TolngLatAlt(i.position.getValue()),1===n&&(i.show=!0,i.position=this.getCallbackProperty(o,"open",3*e*2)),2===n&&(i.show=!0,i.position=this.getCallbackProperty(o,"merge",3*e)),3===n&&(i.show=!0,i.position=this.getCallbackProperty(o,"recovery",3*e))}},appointChange:function(n){this.form.whole="";for(var e=0;e<this.EntityArr.length;e++){var t,i=this.EntityArr[e],o=void 0;o=null!==(t=i.position)&&void 0!==t&&t._value?this.cartesian3TolngLatAlt(i.position._value):this.cartesian3TolngLatAlt(i.position.getValue()),i.position=this.getCallbackProperty(o,"merge",3*e),i.show=0===n||e<n}}}},p=h,f=(t("f698"),t("cba8")),d=Object(f["a"])(p,i,o,!1,null,"5fa40708",null);e["default"]=d.exports}}]);