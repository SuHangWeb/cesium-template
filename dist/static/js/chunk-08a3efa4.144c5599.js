(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-08a3efa4"],{"3c14":function(n,t,i){"use strict";i("e9ff")},"78be":function(n,t,i){var e=i("46a7"),o=i("bc35"),s=i("5386");e({target:"Array",proto:!0},{fill:o}),s("fill")},"83f3":function(n,t,i){"use strict";i.r(t);var e=function(){var n=this,t=n.$createElement;n._self._c;return n._m(0)},o=[function(){var n=this,t=n.$createElement,i=n._self._c||t;return i("div",{staticClass:"container"},[i("div",{attrs:{id:"cesiumContainer"}})])}],s=i("9e48"),r=i("c407"),a=i("896e"),l=[{codeLanguage:"VUE",relyOn:[{label:"uuid（npm）",url:"https://www.npmjs.com/package/uuid",externalLinks:!0},{label:"Entity.js",url:"cesium/Entity.js"},{label:"Utils.js",url:"cesium/Utils.js"},{label:"qiche.gltf",url:"Vue/Entity/dynamicPosition/qiche.gltf"}],code:[{codeLanguage:"html",content:'<template>\n                    <div class="container">\n                      <div id="cesiumContainer"></div>\n                    </div>\n                  </template>'},{codeLanguage:"js",content:'import Entity from "@/common/cesium/Entity.js";\n                  import Utils from "@/common/cesium/Utils.js";\n                  import { v4 as uuidv4 } from "uuid";\n                  export default {\n                    name: "dynamicPosition",\n                    data() {\n                      return {\n                        viewer: null,\n                        _Entity: null,\n                        _Utils: null,\n                        ModelEntityArr: [],\n                      };\n                    },\n                    mounted() {\n                      this.init();\n                    },\n                    methods: {\n                      init() {\n                        const Cesium = this.cesium;\n                        Cesium.Ion.defaultAccessToken = process.env.VUE_APP_TOKEN;\n                        this.viewer = new Cesium.Viewer("cesiumContainer", {\n                          imageryProvider: new Cesium.UrlTemplateImageryProvider({\n                            url: "http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}",\n                          }),\n                          terrainProvider: new Cesium.CesiumTerrainProvider({\n                            url: "http://data.marsgis.cn/terrain",\n                          }),\n                          shouldAnimate: true,\n                          timeline: true,\n                          infoBox: false,\n                          selectionIndicator: false,\n                          // sceneMode: 2,\n                          // scale: 0.1,\n                          animation: false, //隐藏动画小组件（左下角圆的控件）\n                        });\n                        //隐藏底部时间线\n                        this.viewer.timeline.container.style.display = "none";\n                        //启用使用场景的光源为地球照明\n                        this.viewer.scene.globe.enableLighting = true;\n                        //深度监听\n                        this.viewer.scene.globe.depthTestAgainstTerrain = true;\n                        //Set the random number seed for consistent results.\n                        Cesium.Math.setRandomNumberSeed(3);\n                  \n                        this._Entity = new Entity(Cesium, this.viewer);\n                        this._Utils = new Utils(Cesium, this.viewer);\n                        this.start();\n                  \n                        //相机\n                        this.viewer.camera.setView({\n                          //setView是直接跳到 flyTo// 是镜头飞行到  网速不好或者电脑配置不高 还是不要fly了吧\n                          destination: Cesium.Cartesian3.fromDegrees(\n                            123.43382736814452,\n                            41.811201240193164,\n                            3000\n                          ), //经纬度坐标转换为 笛卡尔坐标(世界坐标)\n                          orientation: {\n                            heading: Cesium.Math.toRadians(0.0), // east, default value is 0.0 (north) //东西南北朝向\n                            pitch: Cesium.Math.toRadians(-90), // default value (looking down)  //俯视仰视视觉\n                            roll: 0.0, // default value\n                          },\n                          duration: 3, //3秒到达战场\n                        });\n                      },\n                      /**\n                       * 开始\n                       */\n                      start() {\n                        const Cesium = this.cesium;\n                        let ModelEntity = [];\n                        for (let i = 0; i < 20; i++) {\n                          // 创建模型 start\n                          const createModel = this._Entity.createModel({\n                            id: uuidv4(),\n                            uri:\n                              process.env.VUE_APP_PUBLIC_URL +\n                              "/Vue/Entity/dynamicPosition/qiche.gltf",\n                            maximumScale: 100,\n                            minimumPixelSize: 30,\n                            heightReference: Cesium.HeightReference.CLAMP_TO_GROUND,\n                          });\n                          // 创建模型 end\n                          ModelEntity.push(createModel);\n                        }\n                        this.ModelEntityArr = ModelEntity;\n                        this.setPosition();\n                        setInterval(() => {\n                          this.setPosition();\n                        }, 20000);\n                      },\n                      /**\n                       * 获取随机位置\n                       */\n                      getRandomPoint() {\n                        const randomPoint = this._Utils.randomPoint({\n                          start: [123.43408676397446, 41.81120812753955],\n                          end: [123.45099649125092, 41.81138896519967],\n                          range: 100,\n                        });\n                        return randomPoint;\n                      },\n                      getCallbackProperty(startPosition, endPosition) {\n                        const Cesium = this.cesium;\n                        let factor = 0;\n                        const position = new Cesium.CallbackProperty(function (time) {\n                          if (factor > 5000) {\n                            factor = 0;\n                          }\n                          factor++;\n                          // 动态更新位置\n                          return Cesium.Cartesian3.lerp(\n                            startPosition,\n                            endPosition,\n                            factor / 500.0,\n                            new Cesium.Cartesian3()\n                          );\n                        }, false);\n                        return position;\n                      },\n                      setPosition() {\n                        const Cesium = this.cesium;\n                        // console.log(this.ModelEntityArr);\n                        for (let i = 0; i < this.ModelEntityArr.length; i++) {\n                          const item = this.ModelEntityArr[i];\n                          // console.log(getEntityPosition);\n                          //获取随机位置\n                          let startPosition = "";\n                          //判断实体位置\n                          const getEntityPosition = this._Utils.getEntityPosition(item);\n                          if (getEntityPosition) {\n                            startPosition = getEntityPosition;\n                          } else {\n                            startPosition = this.getRandomPoint();\n                          }\n                          let endPosition = this.getRandomPoint();\n                  \n                          const position = this.getCallbackProperty(startPosition, endPosition);\n                          item.position = position;\n                          item.orientation = new Cesium.VelocityOrientationProperty(position);\n                        }\n                      },\n                    },\n                  };'},{codeLanguage:"css",content:".container {\n                      width: 100%;\n                      height: 100%;\n                      #cesiumContainer {\n                        width: 100%;\n                        height: 100%;\n                      }\n                    }"}]},{codeLanguage:"JS",relyOn:[{label:"uuid.min.js",url:"JavaScript/cesium/Tripartite/uuid-js/uuid.min.js"},{label:"Entity.js",url:"JavaScript/cesium/Entity.js"},{label:"Utils.js",url:"JavaScript/cesium/Utils.js"},{label:"qiche.gltf",url:"JavaScript/Entity/dynamicPosition/qiche.gltf"}],code:[{codeLanguage:"js",content:'\n                    function dynamicPosition() {\n                      const _Utils = new Utils(Cesium,viewer)\n                      const _Entity = new Entity(Cesium, viewer);\n                      let ModelEntityArr = []\n                      //相机\n                      viewer.camera.setView({\n                          //setView是直接跳到 flyTo// 是镜头飞行到  网速不好或者电脑配置不高 还是不要fly了吧\n                          destination: Cesium.Cartesian3.fromDegrees(\n                              123.43382736814452,\n                              41.811201240193164,\n                              3000\n                          ), //经纬度坐标转换为 笛卡尔坐标(世界坐标)\n                          orientation: {\n                              heading: Cesium.Math.toRadians(0.0), // east, default value is 0.0 (north) //东西南北朝向\n                              pitch: Cesium.Math.toRadians(-90), // default value (looking down)  //俯视仰视视觉\n                              roll: 0.0, // default value\n                          },\n                          duration: 3, //3秒到达战场\n                      });\n                  \n                  \n                      let ModelEntity = [];\n                      for (let i = 0; i < 20; i++) {\n                          // 创建模型 start\n                          const createModel = _Entity.createModel({\n                              id: uuid4(),\n                              uri: "http://re8r7gk9l.hb-bkt.clouddn.com/files/qiche.gltf",\n                              maximumScale: 100,\n                              minimumPixelSize: 30,\n                              heightReference: Cesium.HeightReference.CLAMP_TO_GROUND,\n                          });\n                          // 创建模型 end\n                          ModelEntity.push(createModel);\n                      }\n                      ModelEntityArr = ModelEntity;\n                  \n                      //开始设置位置\n                      setPosition();\n                      setInterval(() => {\n                          setPosition();\n                      }, 20000);\n                  \n                      /**\n                       * 获取随机位置\n                       */\n                      function getRandomPoint() {\n                          const randomPoint = _Utils.randomPoint({\n                              start: [123.43408676397446, 41.81120812753955],\n                              end: [123.45099649125092, 41.81138896519967],\n                              range: 100,\n                          });\n                          return randomPoint;\n                      }\n                      /**\n                       * 计算移动位置\n                       */\n                      function getCallbackProperty(startPosition, endPosition) {\n                          let factor = 0;\n                          const position = new Cesium.CallbackProperty(function (time) {\n                              if (factor > 5000) {\n                                  factor = 0;\n                              }\n                              factor++;\n                              // 动态更新位置\n                              return Cesium.Cartesian3.lerp(\n                                  startPosition,\n                                  endPosition,\n                                  factor / 500.0,\n                                  new Cesium.Cartesian3()\n                              );\n                          }, false);\n                          return position;\n                      }\n                      /**\n                       * 设置位置\n                       */\n                      function setPosition() {\n                          for (let i = 0; i < ModelEntityArr.length; i++) {\n                              const item = ModelEntityArr[i];\n                              //获取随机位置\n                              let startPosition = "";\n                              //判断实体位置\n                              const getEntityPosition = _Utils.getEntityPosition(item);\n                              if (getEntityPosition) {\n                                  startPosition = getEntityPosition;\n                              } else {\n                                  startPosition = getRandomPoint();\n                              }\n                              let endPosition = getRandomPoint();\n                  \n                              const position = getCallbackProperty(startPosition, endPosition);\n                              item.position = position;\n                              item.orientation = new Cesium.VelocityOrientationProperty(position);\n                          }\n                      }\n                  }\n                  dynamicPosition()\n                  '}]}],u={name:"dynamicPosition",data:function(){return{viewer:null,_Entity:null,_Utils:null,ModelEntityArr:[]}},created:function(){this.$store.dispatch("highlight/set_code",l)},mounted:function(){this.init()},methods:{init:function(){var n=this.cesium;n.Ion.defaultAccessToken="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJlNTIzZTZiYi05OWQxLTQ0OTUtYTUzNC1mYjYxNWI4OTZiZTYiLCJpZCI6OTA3MDUsImlhdCI6MTY1MDUzNDAzMn0.0f1DG8NlExZnbrueMn_AgO6GX_g_RASavpxAWcVymPs",this.viewer=new n.Viewer("cesiumContainer",{imageryProvider:new n.UrlTemplateImageryProvider({url:"http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}"}),terrainProvider:new n.CesiumTerrainProvider({url:"http://data.marsgis.cn/terrain"}),shouldAnimate:!0,timeline:!0,infoBox:!1,selectionIndicator:!1,animation:!1}),this.viewer.timeline.container.style.display="none",this.viewer.scene.globe.enableLighting=!0,this.viewer.scene.globe.depthTestAgainstTerrain=!0,n.Math.setRandomNumberSeed(3),this._Entity=new s["a"](n,this.viewer),this._Utils=new r["a"](n,this.viewer),this.start(),this.viewer.camera.setView({destination:n.Cartesian3.fromDegrees(123.43382736814452,41.811201240193164,3e3),orientation:{heading:n.Math.toRadians(0),pitch:n.Math.toRadians(-90),roll:0},duration:3})},start:function(){for(var n=this,t=this.cesium,i=[],e=0;e<20;e++){var o=this._Entity.createModel({id:Object(a["a"])(),uri:"/cesium-template/Vue/Entity/dynamicPosition/qiche.gltf",maximumScale:100,minimumPixelSize:30,heightReference:t.HeightReference.CLAMP_TO_GROUND});i.push(o)}this.ModelEntityArr=i,this.setPosition(),setInterval((function(){n.setPosition()}),2e4)},getRandomPoint:function(){var n=this._Utils.randomPoint({start:[123.43408676397446,41.81120812753955],end:[123.45099649125092,41.81138896519967],range:100});return n},getCallbackProperty:function(n,t){var i=this.cesium,e=0,o=new i.CallbackProperty((function(o){return e>5e3&&(e=0),e++,i.Cartesian3.lerp(n,t,e/500,new i.Cartesian3)}),!1);return o},setPosition:function(){for(var n=this.cesium,t=0;t<this.ModelEntityArr.length;t++){var i=this.ModelEntityArr[t],e="",o=this._Utils.getEntityPosition(i);e=o||this.getRandomPoint();var s=this.getRandomPoint(),r=this.getCallbackProperty(e,s);i.position=r,i.orientation=new n.VelocityOrientationProperty(r)}}}},c=u,d=(i("3c14"),i("cba8")),m=Object(d["a"])(c,e,o,!1,null,"8c10d43c",null);t["default"]=m.exports},"896e":function(n,t,i){"use strict";var e,o=new Uint8Array(16);function s(){if(!e&&(e="undefined"!==typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!==typeof msCrypto&&"function"===typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto),!e))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return e(o)}var r=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function a(n){return"string"===typeof n&&r.test(n)}for(var l=a,u=[],c=0;c<256;++c)u.push((c+256).toString(16).substr(1));function d(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=(u[n[t+0]]+u[n[t+1]]+u[n[t+2]]+u[n[t+3]]+"-"+u[n[t+4]]+u[n[t+5]]+"-"+u[n[t+6]]+u[n[t+7]]+"-"+u[n[t+8]]+u[n[t+9]]+"-"+u[n[t+10]]+u[n[t+11]]+u[n[t+12]]+u[n[t+13]]+u[n[t+14]]+u[n[t+15]]).toLowerCase();if(!l(i))throw TypeError("Stringified UUID is invalid");return i}var m=d;function h(n,t,i){n=n||{};var e=n.random||(n.rng||s)();if(e[6]=15&e[6]|64,e[8]=63&e[8]|128,t){i=i||0;for(var o=0;o<16;++o)t[i+o]=e[o];return t}return m(e)}t["a"]=h},e9ff:function(n,t,i){}}]);