(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-1fb581c2"],{"4cef":function(e,t,i){"use strict";var n=i("4bb1"),a=i("e143"),r=function(){function e(t,i){Object(n["a"])(this,e),this.Cesium=t,this.viewer=i}return Object(a["a"])(e,[{key:"create",value:function(e){var t=this.Cesium,i=this.viewer,n=null!==e&&void 0!==e&&e.cesiumName?e.cesiumName:"",a=null!==e&&void 0!==e&&e.source?e.source:"",r=null!==e&&void 0!==e&&e.uniforms?e.uniforms:"";function l(){this._definitionChanged=new t.Event,this._color=void 0,this._colorSubscription=void 0,this.color=null!==e&&void 0!==e&&e.color?e.color:t.Color.BLUE,this.duration=null!==e&&void 0!==e&&e.duration?e.duration:1e3,this.image=null!==e&&void 0!==e&&e.image?e.image:"",this._time=(new Date).getTime()}Object.defineProperties(l.prototype,{isConstant:{get:function(){return!1}},definitionChanged:{get:function(){return this._definitionChanged}},color:t.createPropertyDescriptor("color")});var o="Material".concat(parseInt(1e3*Math.random()));return l.prototype.getType=function(e){return o},l.prototype.getValue=function(e,n){return t.defined(n)||(n={}),n.color=t.Property.getValueOrClonedDefault(this._color,e,t.Color.WHITE,n.color),n.image=this.image,this.duration&&(n.time=((new Date).getTime()-this._time)%this.duration/this.duration),i.scene.requestRender(),n},l.prototype.equals=function(e){return this===e||e instanceof l&&t.Property.equals(this._color,e._color)},t.Material._materialCache.addMaterial(o,{fabric:{type:o,uniforms:r,source:a},translucent:function(e){return!0}}),t[n]=l,l}}]),e}();t["a"]=r},"78be":function(e,t,i){var n=i("46a7"),a=i("bc35"),r=i("5386");n({target:"Array",proto:!0},{fill:a}),r("fill")},"7d42":function(e,t,i){},"88c8":function(e,t,i){"use strict";i.r(t);var n=function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("div",{staticClass:"container"},[i("div",{attrs:{id:"cesiumContainer"}}),i("div",{staticClass:"operation-panel"},[i("el-select",{attrs:{size:"mini",placeholder:"请选择墙体类型"},model:{value:e.wallType,callback:function(t){e.wallType=t},expression:"wallType"}},e._l(e.wallTypeArr,(function(e){return i("el-option",{key:e.value,attrs:{label:e.label,value:e.value}})})),1),i("el-button",{staticClass:"startButton",attrs:{size:"mini",disabled:""==e.wallType,type:"primary",plain:""},on:{click:e.startDraw}},[e._v("开始绘制")])],1)])},a=[],r=(i("decf"),i("eb3b"),i("78be"),i("4cef")),l=i("9e48"),o=[{label:"流动墙",value:"1",position:[123.4338589341694,41.811889939097895,123.43329581924921,41.81177873630029,123.43297281881931,41.811434437097255,123.43295567370998,41.81102812337492,123.43320435913063,41.81071804352293,123.43357881081174,41.81055765802799,123.43411333122562,41.81054910409206,123.43461355350443,41.810780058939656,123.43479363918155,41.81118637120609,123.4346707315803,41.811541361879385,123.43434772954672,41.811797982861705,123.4338589341694,41.811889939097895],title:"惠工广场"},{label:"波纹墙",value:"2",position:[123.38624525883692,41.794068393526416,123.38687089890857,41.79395971222164,123.38747418262378,41.7946536433207,123.38875897739584,41.7940600412453,123.3890159272599,41.79370053758991,123.38833443306693,41.79279761067365,123.38875895717108,41.79253843546213,123.38815568203603,41.79180272016025,123.38761944484679,41.7918863236855,123.38630123240169,41.79013897251926,123.38585437199272,41.79028945276436,123.38536283930766,41.789896494564125,123.38432387278195,41.79028940539239,123.38454728140016,41.79082448839793,123.38563087249528,41.792362844994635,123.38519515839681,41.792647091282724,123.38624525883692,41.794068393526416],title:"沈阳站"}],s=i("c407"),c=function(e){var t=function(e){if(e&&e.get){var t="czm_material czm_getMaterial(czm_materialInput materialInput)\n                    {\n                        czm_material material = czm_getDefaultMaterial(materialInput);\n                        vec2 st = materialInput.st;";return"vertical"==e.freely?t+="vec4 colorImage = texture2D(image, vec2(fract(st.s), fract(float("+e.count+")*st.t"+e.direction+" time)));\n ":t+="vec4 colorImage = texture2D(image, vec2(fract(float("+e.count+")*st.s "+e.direction+" time), fract(st.t)));\n ",t+="vec4 fragColor;\n                        fragColor.rgb = (colorImage.rgb+color.rgb) / 1.0;\n                        fragColor = czm_gammaCorrect(fragColor);\n                        material.diffuse = colorImage.rgb;\n                        material.alpha = colorImage.a;\n                        material.emission = fragColor.rgb;\n                        return material;\n                    }",t}};return{cesiumName:"Material_DynamicWallMaterialPropertys",image:"/cesium-template/Vue/Entity/wall/wl.png",color:e.Color.CYAN,duration:1500,uniforms:{color:new e.Color(1,0,0,.5),image:e.Material.DefaultImageId,time:-20},source:t({get:!0,count:3,freely:"vertical",direction:"-"})}},u=function(e){var t=function(){return"czm_material czm_getMaterial(czm_materialInput materialInput)\n            {\n                 czm_material material = czm_getDefaultMaterial(materialInput);\n                 vec2 st = materialInput.st;\n                 vec4 colorImage = texture2D(image, vec2(fract(st.s - time), st.t));\n                 material.alpha = colorImage.a * color.a;\n                 material.diffuse = (colorImage.rgb+color.rgb)/2.0;\n                 return material;\n             }"};return{cesiumName:"Material_TrailLineMaterialProperty",image:"/cesium-template/Vue/Entity/wall/flow.png",color:e.Color.RED.withAlpha(.5),duration:15e3,uniforms:{color:new e.Color(1,1,1,1),image:e.Material.DefaultImageId,time:0,constantSpeed:30,depthFailMaterial:!0},source:t()}},m=[{codeLanguage:"VUE",relyOn:[{label:"Entity.js",url:"cesium/Entity.js"},{label:"Materials/index.js",url:"cesium/Materials/index.js"},{label:"Utils.js",url:"cesium/Utils.js"},{label:"DynamicWallMaterialPropertys.js",url:"Vue/Entity/wall/material/DynamicWallMaterialPropertys.js"},{label:"TrailLineMaterialProperty.js",url:"Vue/Entity/wall/material/TrailLineMaterialProperty.js"},{label:"data.js",url:"Vue/Entity/wall/data.js"},{label:"wl.png",url:"Vue/Entity/wall/wl.png"},{label:"flow.png",url:"Vue/Entity/wall/flow.png"}],code:[{codeLanguage:"html",content:'<template>\n                      <div class="container">\n                        <div id="cesiumContainer"></div>\n                        <div class="operation-panel">\n                          <el-select size="mini" v-model="wallType" placeholder="请选择墙体类型">\n                            <el-option\n                              v-for="item in wallTypeArr"\n                              :key="item.value"\n                              :label="item.label"\n                              :value="item.value"\n                            >\n                            </el-option>\n                          </el-select>\n                          <el-button\n                            size="mini"\n                            :disabled="wallType == \'\'"\n                            @click="startDraw"\n                            class="startButton"\n                            type="primary"\n                            plain\n                            >开始绘制</el-button\n                          >\n                        </div>\n                      </div>\n                    </template>'},{codeLanguage:"js",content:'import Material from "@/common/cesium/Materials/index.js";\n                  import Entity from "@/common/cesium/Entity.js";\n                  import wallData from "./module/data.js";//数据\n                  import Utils from "@/common/cesium/Utils.js";\n                  import DynamicWallMaterialPropertys from "./module/material/DynamicWallMaterialPropertys"; //波纹墙\n                  import TrailLineMaterialProperty from "./module/material/TrailLineMaterialProperty"; //流动墙\n                  export default {\n                    name: "wall",\n                    data() {\n                      return {\n                        viewer: null,\n                        _Entity: null,\n                        _Utils: null,\n                        _Material: null,\n                        wallTypeArr: wallData,\n                        wallType: "",\n                      };\n                    },\n                    mounted() {\n                      this.init();\n                    },\n                    methods: {\n                      init() {\n                        const Cesium = this.cesium;\n                        Cesium.Ion.defaultAccessToken = process.env.VUE_APP_TOKEN;\n                        this.viewer = new Cesium.Viewer("cesiumContainer", {\n                          imageryProvider: new Cesium.ArcGisMapServerImageryProvider({\n                            url: "https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer",\n                          }),\n                          terrainProvider: new Cesium.CesiumTerrainProvider({\n                            //加载火星在线地形\n                            url: "http://data.marsgis.cn/terrain",\n                          }),\n                          shouldAnimate: true,\n                          infoBox: false,\n                          selectionIndicator: false,\n                        });\n                        //深度监听  在当前效果里可以设置贴地效果\n                        this.viewer.scene.globe.depthTestAgainstTerrain = true;\n                        this._Entity = new Entity(Cesium, this.viewer);\n                        this._Utils = new Utils();\n                        this._Material = new Material(Cesium, this.viewer);\n                      },\n                      /**\n                      * 开始绘制\n                      */\n                      startDraw() {\n                        const Cesium = this.cesium;\n                        //删除所有实体\n                        this._Entity.removeEntity({ type: "all" });\n                        //过滤出来需要的数据对象\n                        const filter_data = this.wallTypeArr.filter(\n                          (item) => item.value == this.wallType\n                        );\n                        if (filter_data.length == 0) return;\n                        const obj = filter_data[0];\n                        let material = null;\n                  \n                        //流动墙\n                        if (obj.value == "1") {\n                          this._Material.create(TrailLineMaterialProperty(Cesium));\n                          material = new Cesium.Material_TrailLineMaterialProperty();\n                        }\n                        //波纹墙\n                        if (obj.value == "2") {\n                          this._Material.create(DynamicWallMaterialPropertys(Cesium));\n                          material = new Cesium.Material_DynamicWallMaterialPropertys();\n                        }\n                  \n                        const positions = Cesium.Cartesian3.fromDegreesArray(obj.position);\n                        const wallEntity = this._Entity.createWall({\n                          positions,\n                          material,\n                          // common: { clampToGround: true },\n                          // 设置高度\n                          maximumHeights: new Array(positions.length).fill(200), //一个属性，它指定要用于墙顶的高度数组，而不是每个位置的高度\n                          minimunHeights: new Array(positions.length).fill(0), //一个属性，它指定要用于墙底而不是地球表面的高度数组。\n                        });\n                        this.viewer.flyTo(wallEntity);\n                      },\n                    },\n                  };'},{codeLanguage:"css",content:".container {\n                      width: 100%;\n                      height: 100%;\n                      #cesiumContainer {\n                        width: 100%;\n                        height: 100%;\n                      }\n                      .operation-panel {\n                        position: fixed;\n                        bottom: 0;\n                        right: 0;\n                        background-color: #fff;\n                        border-radius: 6px 0 0 0;\n                        padding: 20px;\n                        .startButton {\n                          margin-left: 10px;\n                        }\n                      }\n                    }"}]}],p={name:"wall",data:function(){return{viewer:null,_Entity:null,_Utils:null,_Material:null,wallTypeArr:o,wallType:""}},created:function(){this.$store.dispatch("highlight/set_code",m)},mounted:function(){this.init()},methods:{init:function(){var e=this.cesium;e.Ion.defaultAccessToken="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJlNTIzZTZiYi05OWQxLTQ0OTUtYTUzNC1mYjYxNWI4OTZiZTYiLCJpZCI6OTA3MDUsImlhdCI6MTY1MDUzNDAzMn0.0f1DG8NlExZnbrueMn_AgO6GX_g_RASavpxAWcVymPs",this.viewer=new e.Viewer("cesiumContainer",{imageryProvider:new e.ArcGisMapServerImageryProvider({url:"https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer"}),terrainProvider:new e.CesiumTerrainProvider({url:"http://data.marsgis.cn/terrain"}),shouldAnimate:!0,infoBox:!1,selectionIndicator:!1}),this.viewer.scene.globe.depthTestAgainstTerrain=!0,this._Entity=new l["a"](e,this.viewer),this._Utils=new s["a"],this._Material=new r["a"](e,this.viewer)},startDraw:function(){var e=this,t=this.cesium;this._Entity.removeEntity({type:"all"});var i=this.wallTypeArr.filter((function(t){return t.value==e.wallType}));if(0!=i.length){var n=i[0],a=null;"1"==n.value&&(this._Material.create(u(t)),a=new t.Material_TrailLineMaterialProperty),"2"==n.value&&(this._Material.create(c(t)),a=new t.Material_DynamicWallMaterialPropertys);var r=t.Cartesian3.fromDegreesArray(n.position),l=this._Entity.createWall({positions:r,material:a,maximumHeights:new Array(r.length).fill(200),minimunHeights:new Array(r.length).fill(0)});this.viewer.flyTo(l)}}}},d=p,f=(i("eff1"),i("cba8")),h=Object(f["a"])(d,n,a,!1,null,"103b3412",null);t["default"]=h.exports},eff1:function(e,t,i){"use strict";i("7d42")}}]);